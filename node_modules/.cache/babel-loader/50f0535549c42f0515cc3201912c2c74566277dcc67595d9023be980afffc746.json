{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Grid from './Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MIN_SIZE = 3;\nconst MAX_SIZE = 40;\nconst App = () => {\n  _s();\n  const [rowsInput, setRowsInput] = useState(20);\n  const [colsInput, setColsInput] = useState(20);\n  const [rows, setRows] = useState(20);\n  const [cols, setCols] = useState(20);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [cellStates, setCellStates] = useState([]);\n  const [livingCellsCount, setLivingCellsCount] = useState(0); // 更新的部分\n\n  // 更新的部分\n  const handleResetGrid = () => {\n    setCellStates(Array.from({\n      length: rows\n    }, () => Array.from({\n      length: cols\n    }, () => false)));\n    setLivingCellsCount(0);\n  };\n\n  // 更新的部分\n  const handleNextStep = () => {\n    const newGrid = [...cellStates];\n\n    // 创建一个新的数组来记录每个细胞的存活邻居数量\n    const neighborsCount = Array.from({\n      length: rows\n    }, () => Array.from({\n      length: cols\n    }, () => 0));\n\n    // 计算每个细胞的存活邻居数量\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        // 检查每个细胞周围的8个邻居\n        for (let di = -1; di <= 1; di++) {\n          for (let dj = -1; dj <= 1; dj++) {\n            if (di === 0 && dj === 0) continue; // 跳过当前细胞\n            const ni = i + di;\n            const nj = j + dj;\n            if (ni >= 0 && ni < rows && nj >= 0 && nj < cols && newGrid[ni][nj].alive) {\n              neighborsCount[i][j]++;\n            }\n          }\n        }\n      }\n    }\n\n    // 根据游戏规则更新细胞状态\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        const aliveNeighbors = neighborsCount[i][j];\n        const currentCell = newGrid[i][j];\n        if (currentCell.alive) {\n          // 规则1: A living cell with less than two living neighbours dies.\n          // 规则3: A living cell with more than three live neighbours dies.\n          if (aliveNeighbors < 2 || aliveNeighbors > 3) {\n            newGrid[i][j] = {\n              ...currentCell,\n              alive: false\n            };\n          }\n        } else {\n          // 规则4: A dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\n          if (aliveNeighbors === 3) {\n            newGrid[i][j] = {\n              ...currentCell,\n              alive: true\n            };\n          }\n        }\n      }\n    }\n    setCellStates(newGrid);\n  };\n\n  // 更新存活细胞数量\n  useEffect(() => {\n    const count = cellStates.flat().filter(cell => cell).length;\n    setLivingCellsCount(count);\n  }, [cellStates]);\n  const handleChangeRows = e => {\n    setRowsInput(e.target.value);\n  };\n  const handleChangeCols = e => {\n    setColsInput(e.target.value);\n  };\n  const handleCellClick = index => {\n    const newCellStates = [...cellStates];\n    newCellStates[index] = !newCellStates[index];\n    setCellStates(newCellStates);\n  };\n  const handleSubmit = () => {\n    const newRows = parseInt(rowsInput);\n    const newCols = parseInt(colsInput);\n    if (newRows >= MIN_SIZE && newRows <= MAX_SIZE && newCols >= MIN_SIZE && newCols <= MAX_SIZE) {\n      setRows(newRows);\n      setCols(newCols);\n      setCellStates(Array.from({\n        length: newRows\n      }, () => Array.from({\n        length: newCols\n      }, () => false)));\n      setErrorMessage(\"\");\n    } else {\n      setErrorMessage(`Please enter a value between ${MIN_SIZE} and ${MAX_SIZE}!`);\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-fields\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"height\",\n        children: \"Height:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"height\",\n        value: rowsInput,\n        onChange: handleChangeRows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"width\",\n        children: \"Width:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"width\",\n        value: colsInput,\n        onChange: handleChangeCols\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red',\n          marginTop: '5px'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      rows: rows,\n      cols: cols,\n      cellStates: cellStates,\n      handleCellClick: handleCellClick,\n      handleResetGrid: handleResetGrid // 更新的部分\n      ,\n      handleNextStep: handleNextStep // 更新的部分\n      ,\n      livingCellsCount: livingCellsCount // 更新的部分\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"woBvqn4l1AAup1pfgOeHP+Mz7K0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Grid","jsxDEV","_jsxDEV","MIN_SIZE","MAX_SIZE","App","_s","rowsInput","setRowsInput","colsInput","setColsInput","rows","setRows","cols","setCols","errorMessage","setErrorMessage","cellStates","setCellStates","livingCellsCount","setLivingCellsCount","handleResetGrid","Array","from","length","handleNextStep","newGrid","neighborsCount","i","j","di","dj","ni","nj","alive","aliveNeighbors","currentCell","count","flat","filter","cell","handleChangeRows","e","target","value","handleChangeCols","handleCellClick","index","newCellStates","handleSubmit","newRows","parseInt","newCols","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onClick","style","color","marginTop","_c","$RefreshReg$"],"sources":["/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Grid from './Grid';\n\nconst MIN_SIZE = 3;\nconst MAX_SIZE = 40;\n\nconst App = () => {\n  const [rowsInput, setRowsInput] = useState(20);\n  const [colsInput, setColsInput] = useState(20);\n  const [rows, setRows] = useState(20);\n  const [cols, setCols] = useState(20);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [cellStates, setCellStates] = useState([]);\n  const [livingCellsCount, setLivingCellsCount] = useState(0); // 更新的部分\n\n  // 更新的部分\n  const handleResetGrid = () => {\n    setCellStates(Array.from({ length: rows }, () => Array.from({ length: cols }, () => false)));\n    setLivingCellsCount(0);\n  };\n\n  // 更新的部分\n  const handleNextStep = () => {\n    const newGrid = [...cellStates];\n  \n    // 创建一个新的数组来记录每个细胞的存活邻居数量\n    const neighborsCount = Array.from({ length: rows }, () => Array.from({ length: cols }, () => 0));\n  \n    // 计算每个细胞的存活邻居数量\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        // 检查每个细胞周围的8个邻居\n        for (let di = -1; di <= 1; di++) {\n          for (let dj = -1; dj <= 1; dj++) {\n            if (di === 0 && dj === 0) continue; // 跳过当前细胞\n            const ni = i + di;\n            const nj = j + dj;\n            if (ni >= 0 && ni < rows && nj >= 0 && nj < cols && newGrid[ni][nj].alive) {\n              neighborsCount[i][j]++;\n            }\n          }\n        }\n      }\n    }\n  \n    // 根据游戏规则更新细胞状态\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        const aliveNeighbors = neighborsCount[i][j];\n        const currentCell = newGrid[i][j];\n        \n        if (currentCell.alive) {\n          // 规则1: A living cell with less than two living neighbours dies.\n          // 规则3: A living cell with more than three live neighbours dies.\n          if (aliveNeighbors < 2 || aliveNeighbors > 3) {\n            newGrid[i][j] = { ...currentCell, alive: false };\n          }\n        } else {\n          // 规则4: A dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.\n          if (aliveNeighbors === 3) {\n            newGrid[i][j] = { ...currentCell, alive: true };\n          }\n        }\n      }\n    }\n  \n    setCellStates(newGrid);\n  };\n  \n\n  // 更新存活细胞数量\n  useEffect(() => {\n    const count = cellStates.flat().filter(cell => cell).length;\n    setLivingCellsCount(count);\n  }, [cellStates]);\n\n  const handleChangeRows = (e) => {\n    setRowsInput(e.target.value);\n  };\n\n  const handleChangeCols = (e) => {\n    setColsInput(e.target.value);\n  };\n\n  const handleCellClick = (index) => {\n    const newCellStates = [...cellStates];\n    newCellStates[index] = !newCellStates[index];\n    setCellStates(newCellStates);\n  };\n\n  const handleSubmit = () => {\n    const newRows = parseInt(rowsInput);\n    const newCols = parseInt(colsInput);\n\n    if (newRows >= MIN_SIZE && newRows <= MAX_SIZE && newCols >= MIN_SIZE && newCols <= MAX_SIZE) {\n      setRows(newRows);\n      setCols(newCols);\n      setCellStates(Array.from({ length: newRows }, () => Array.from({ length: newCols }, () => false)));\n      setErrorMessage(\"\");\n    } else {\n      setErrorMessage(`Please enter a value between ${MIN_SIZE} and ${MAX_SIZE}!`);\n      return;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"input-fields\">\n        <label htmlFor=\"height\">Height:</label>\n        <input type=\"number\" id=\"height\" value={rowsInput} onChange={handleChangeRows} />\n        <label htmlFor=\"width\">Width:</label>\n        <input type=\"number\" id=\"width\" value={colsInput} onChange={handleChangeCols} />\n        <button onClick={handleSubmit}>Submit</button>\n        {errorMessage && <div style={{ color: 'red', marginTop: '5px' }}>{errorMessage}</div>}\n\n{/* \n        <button onClick={handleResetGrid}>Reset Grid</button>\n        <button onClick={handleNextStep}>Next Step</button> */}\n\n      </div>\n\n      <Grid\n        rows={rows}\n        cols={cols}\n        cellStates={cellStates}\n        handleCellClick={handleCellClick}\n        handleResetGrid={handleResetGrid} // 更新的部分\n        handleNextStep={handleNextStep} // 更新的部分\n        livingCellsCount={livingCellsCount} // 更新的部分\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}