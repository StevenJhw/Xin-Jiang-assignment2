{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Grid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  rows,\n  cols,\n  cellStates,\n  handleCellClick\n}) => {\n  _s();\n  const [grid, setGrid] = useState([[]]);\n  useEffect(() => {\n    setGrid(initializeGrid());\n  }, [rows, cols]);\n  const updateCell = (row, col) => {\n    const newGrid = [...grid];\n    newGrid[row][col] = {\n      alive: !newGrid[row][col].alive,\n      age: 0\n    }; // 更新细胞状态，并将存活时间重置为0\n    setGrid(newGrid);\n  };\n  function initializeGrid() {\n    return Array.from({\n      length: rows\n    }, () => Array.from({\n      length: cols\n    }, () => ({\n      alive: Math.random() < 0.05,\n      age: 0\n    })) // 初始化细胞状态和存活时间\n    );\n  }\n  const getColor = age => {\n    const maxAge = 10; // 最大存活时间为10\n    const startColor = [255, 0, 0]; // 开始颜色为红色\n    const endColor = [0, 0, 255]; // 结束颜色为蓝色\n\n    // 计算每个颜色通道的渐变值\n    const r = startColor[0] + (endColor[0] - startColor[0]) * (age / maxAge);\n    const g = startColor[1] + (endColor[1] - startColor[1]) * (age / maxAge);\n    const b = startColor[2] + (endColor[2] - startColor[2]) * (age / maxAge);\n    return `rgb(${r}, ${g}, ${b})`; // 返回RGB颜色字符串\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n        alive: cell.alive,\n        onClick: () => {\n          updateCell(rowIndex, colIndex);\n          handleCellClick(rowIndex * cols + colIndex);\n        },\n        style: {\n          backgroundColor: cell.alive ? getColor(cell.age) : '#FFFFFF'\n        } // 根据存活时间设置颜色\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"5Vi7HY3/aSb0piUODEQBJrixeks=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","Cell","jsxDEV","_jsxDEV","Grid","rows","cols","cellStates","handleCellClick","_s","grid","setGrid","initializeGrid","updateCell","row","col","newGrid","alive","age","Array","from","length","Math","random","getColor","maxAge","startColor","endColor","r","g","b","className","children","map","rowIndex","cell","colIndex","onClick","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Grid.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Cell from './Cell';\n\nconst Grid = ({ rows, cols, cellStates, handleCellClick }) => {\n  const [grid, setGrid] = useState([[]]);\n\n  useEffect(() => {\n    setGrid(initializeGrid());\n  }, [rows, cols]);\n\n  const updateCell = (row, col) => {\n    const newGrid = [...grid];\n    newGrid[row][col] = { alive: !newGrid[row][col].alive, age: 0 }; // 更新细胞状态，并将存活时间重置为0\n    setGrid(newGrid);\n  };\n\n  function initializeGrid() {\n    return Array.from({ length: rows }, () =>\n      Array.from({ length: cols }, () => ({ alive: Math.random() < 0.05, age: 0 })) // 初始化细胞状态和存活时间\n    );\n  }\n\n  const getColor = (age) => {\n    const maxAge = 10; // 最大存活时间为10\n    const startColor = [255, 0, 0]; // 开始颜色为红色\n    const endColor = [0, 0, 255]; // 结束颜色为蓝色\n\n    // 计算每个颜色通道的渐变值\n    const r = startColor[0] + (endColor[0] - startColor[0]) * (age / maxAge);\n    const g = startColor[1] + (endColor[1] - startColor[1]) * (age / maxAge);\n    const b = startColor[2] + (endColor[2] - startColor[2]) * (age / maxAge);\n\n    return `rgb(${r}, ${g}, ${b})`; // 返回RGB颜色字符串\n  };\n\n  return (\n    <div className=\"grid\">\n      {grid.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"grid-row\">\n          {row.map((cell, colIndex) => (\n            <Cell\n              key={colIndex}\n              alive={cell.alive}\n              onClick={() => {\n                updateCell(rowIndex, colIndex);\n                handleCellClick(rowIndex * cols + colIndex);\n              }}\n              style={{ backgroundColor: cell.alive ? getColor(cell.age) : '#FFFFFF' }} // 根据存活时间设置颜色\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Grid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,cAAc,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACP,IAAI,EAAEC,IAAI,CAAC,CAAC;EAEhB,MAAMO,UAAU,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IAC/B,MAAMC,OAAO,GAAG,CAAC,GAAGN,IAAI,CAAC;IACzBM,OAAO,CAACF,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG;MAAEE,KAAK,EAAE,CAACD,OAAO,CAACF,GAAG,CAAC,CAACC,GAAG,CAAC,CAACE,KAAK;MAAEC,GAAG,EAAE;IAAE,CAAC,CAAC,CAAC;IACjEP,OAAO,CAACK,OAAO,CAAC;EAClB,CAAC;EAED,SAASJ,cAAcA,CAAA,EAAG;IACxB,OAAOO,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEhB;IAAK,CAAC,EAAE,MAClCc,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEf;IAAK,CAAC,EAAE,OAAO;MAAEW,KAAK,EAAEK,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI;MAAEL,GAAG,EAAE;IAAE,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC;EACH;EAEA,MAAMM,QAAQ,GAAIN,GAAG,IAAK;IACxB,MAAMO,MAAM,GAAG,EAAE,CAAC,CAAC;IACnB,MAAMC,UAAU,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChC,MAAMC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAE9B;IACA,MAAMC,CAAC,GAAGF,UAAU,CAAC,CAAC,CAAC,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC,GAAGD,UAAU,CAAC,CAAC,CAAC,KAAKR,GAAG,GAAGO,MAAM,CAAC;IACxE,MAAMI,CAAC,GAAGH,UAAU,CAAC,CAAC,CAAC,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC,GAAGD,UAAU,CAAC,CAAC,CAAC,KAAKR,GAAG,GAAGO,MAAM,CAAC;IACxE,MAAMK,CAAC,GAAGJ,UAAU,CAAC,CAAC,CAAC,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC,GAAGD,UAAU,CAAC,CAAC,CAAC,KAAKR,GAAG,GAAGO,MAAM,CAAC;IAExE,OAAQ,OAAMG,CAAE,KAAIC,CAAE,KAAIC,CAAE,GAAE,CAAC,CAAC;EAClC,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBtB,IAAI,CAACuB,GAAG,CAAC,CAACnB,GAAG,EAAEoB,QAAQ,kBACtB/B,OAAA;MAAoB4B,SAAS,EAAC,UAAU;MAAAC,QAAA,EACrClB,GAAG,CAACmB,GAAG,CAAC,CAACE,IAAI,EAAEC,QAAQ,kBACtBjC,OAAA,CAACF,IAAI;QAEHgB,KAAK,EAAEkB,IAAI,CAAClB,KAAM;QAClBoB,OAAO,EAAEA,CAAA,KAAM;UACbxB,UAAU,CAACqB,QAAQ,EAAEE,QAAQ,CAAC;UAC9B5B,eAAe,CAAC0B,QAAQ,GAAG5B,IAAI,GAAG8B,QAAQ,CAAC;QAC7C,CAAE;QACFE,KAAK,EAAE;UAAEC,eAAe,EAAEJ,IAAI,CAAClB,KAAK,GAAGO,QAAQ,CAACW,IAAI,CAACjB,GAAG,CAAC,GAAG;QAAU,CAAE,CAAC;MAAA,GANpEkB,QAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOd,CACF;IAAC,GAXMT,QAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClC,EAAA,CAnDIL,IAAI;AAAAwC,EAAA,GAAJxC,IAAI;AAqDV,eAAeA,IAAI;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}