{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Grid.js\",\n  _s = $RefreshSig$();\n// Grid.js\nimport React, { useState, useEffect } from 'react';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  rows,\n  cols,\n  cellStates,\n  handleCellClick,\n  handleResetGrid,\n  handleNextStep,\n  livingCellsCount\n}) => {\n  _s();\n  const [grid, setGrid] = useState([[]]);\n  useEffect(() => {\n    setGrid(initializeGrid());\n  }, [rows, cols]);\n  const updateCell = (row, col) => {\n    const newGrid = [...grid];\n    const cell = newGrid[row][col];\n    const newCell = {\n      alive: !cell.alive,\n      age: cell.alive ? 0 : cell.age + 1\n    };\n    newGrid[row][col] = newCell;\n    setGrid(newGrid);\n  };\n  function initializeGrid() {\n    return Array.from({\n      length: rows\n    }, () => Array.from({\n      length: cols\n    }, () => ({\n      alive: Math.random() < 0.05,\n      age: 0\n    })));\n  }\n  const getColor = age => {\n    const maxAge = 10;\n    const startColor = [255, 0, 0];\n    const endColor = [0, 0, 255];\n    const r = startColor[0] + (endColor[0] - startColor[0]) * (age / maxAge);\n    const g = startColor[1] + (endColor[1] - startColor[1]) * (age / maxAge);\n    const b = startColor[2] + (endColor[2] - startColor[2]) * (age / maxAge);\n    return `rgb(${r}, ${g}, ${b})`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n        alive: cell.alive,\n        onClick: () => {\n          updateCell(rowIndex, colIndex);\n          handleCellClick(rowIndex * cols + colIndex);\n        },\n        style: {\n          backgroundColor: cell.alive ? '#000000' : getColor(cell.age)\n        }\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetGrid,\n        children: \"Reset Grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextStep,\n        children: \"Next Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Living Cells: \", livingCellsCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"5Vi7HY3/aSb0piUODEQBJrixeks=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","Cell","jsxDEV","_jsxDEV","Grid","rows","cols","cellStates","handleCellClick","handleResetGrid","handleNextStep","livingCellsCount","_s","grid","setGrid","initializeGrid","updateCell","row","col","newGrid","cell","newCell","alive","age","Array","from","length","Math","random","getColor","maxAge","startColor","endColor","r","g","b","className","children","map","rowIndex","colIndex","onClick","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Grid.js"],"sourcesContent":["// Grid.js\nimport React, { useState, useEffect } from 'react';\nimport Cell from './Cell';\n\nconst Grid = ({ rows, cols, cellStates, handleCellClick, handleResetGrid, handleNextStep, livingCellsCount }) => {\n  const [grid, setGrid] = useState([[]]);\n\n  useEffect(() => {\n    setGrid(initializeGrid());\n  }, [rows, cols]);\n\n  const updateCell = (row, col) => {\n    const newGrid = [...grid];\n    const cell = newGrid[row][col];\n    const newCell = { alive: !cell.alive, age: cell.alive ? 0 : cell.age + 1 };\n    newGrid[row][col] = newCell;\n    setGrid(newGrid);\n  };\n  \n  function initializeGrid() {\n    return Array.from({ length: rows }, () =>\n      Array.from({ length: cols }, () => ({ alive: Math.random() < 0.05, age: 0 }))\n    );\n  }\n\n  const getColor = (age) => {\n    const maxAge = 10;\n    const startColor = [255, 0, 0];\n    const endColor = [0, 0, 255];\n\n    const r = startColor[0] + (endColor[0] - startColor[0]) * (age / maxAge);\n    const g = startColor[1] + (endColor[1] - startColor[1]) * (age / maxAge);\n    const b = startColor[2] + (endColor[2] - startColor[2]) * (age / maxAge);\n\n    return `rgb(${r}, ${g}, ${b})`;\n  };\n\n  return (\n    <div className=\"grid\">\n      {grid.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"grid-row\">\n          {row.map((cell, colIndex) => (\n            <Cell\n              key={colIndex}\n              alive={cell.alive}\n              onClick={() => {\n                updateCell(rowIndex, colIndex);\n                handleCellClick(rowIndex * cols + colIndex);\n              }}\n              style={{ backgroundColor: cell.alive ? '#000000' : getColor(cell.age) }}\n            />\n          ))}\n        </div>\n      ))}\n      <div>\n        <button onClick={handleResetGrid}>Reset Grid</button>\n        <button onClick={handleNextStep}>Next Step</button>\n      </div>\n      <div>Living Cells: {livingCellsCount}</div>\n    </div>\n  );\n};\n\nexport default Grid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}