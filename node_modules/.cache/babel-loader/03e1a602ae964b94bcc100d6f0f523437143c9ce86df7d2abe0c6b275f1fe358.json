{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Cell.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = ({\n  alive,\n  onClick\n}) => {\n  _s();\n  const [survivalCount, setSurvivalCount] = useState(0);\n  const handleClick = () => {\n    onClick();\n    if (alive) {\n      setSurvivalCount(survivalCount + 1);\n    }\n  };\n\n  // 根据存活次数设置单元格的颜色\n  const calculateColor = () => {\n    const colorSpectrum = {\n      '0': 'Navy',\n      '0.25': 'Blue',\n      '0.5': 'Green',\n      '0.75': 'Yellow',\n      '1': 'Red'\n    };\n\n    // 计算颜色在颜色谱中的位置\n    const position = Math.min(survivalCount / 10, 1); // 存活次数范围从0到10，将其归一化到0到1\n\n    // 根据位置返回相应的颜色\n    for (const key in colorSpectrum) {\n      if (position <= parseFloat(key)) {\n        return colorSpectrum[key];\n      }\n    }\n    return 'Red'; // 默认返回红色\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `cell ${alive ? 'alive' : 'dead'}`,\n    onClick: handleClick,\n    style: {\n      backgroundColor: alive ? null : calculateColor()\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Cell, \"f+0S9gQE+pew8XVULihEDFzfOBk=\");\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Cell","alive","onClick","_s","survivalCount","setSurvivalCount","handleClick","calculateColor","colorSpectrum","position","Math","min","key","parseFloat","className","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Cell.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Cell = ({ alive, onClick }) => {\n  const [survivalCount, setSurvivalCount] = useState(0);\n\n  const handleClick = () => {\n    onClick();\n    if (alive) {\n      setSurvivalCount(survivalCount + 1);\n    }\n  };\n\n  // 根据存活次数设置单元格的颜色\n  const calculateColor = () => {\n    const colorSpectrum = {\n      '0': 'Navy',\n      '0.25': 'Blue',\n      '0.5': 'Green',\n      '0.75': 'Yellow',\n      '1': 'Red'\n    };\n\n    // 计算颜色在颜色谱中的位置\n    const position = Math.min(survivalCount / 10, 1); // 存活次数范围从0到10，将其归一化到0到1\n\n    // 根据位置返回相应的颜色\n    for (const key in colorSpectrum) {\n      if (position <= parseFloat(key)) {\n        return colorSpectrum[key];\n      }\n    }\n    return 'Red'; // 默认返回红色\n  };\n\n  return (\n    <div\n      className={`cell ${alive ? 'alive' : 'dead'}`}\n      onClick={handleClick}\n      style={{ backgroundColor: alive ?  null : calculateColor() }}\n    ></div>\n  );\n};\n\nexport default Cell;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErD,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBJ,OAAO,CAAC,CAAC;IACT,IAAID,KAAK,EAAE;MACTI,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;IACrC;EACF,CAAC;;EAED;EACA,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,aAAa,GAAG;MACpB,GAAG,EAAE,MAAM;MACX,MAAM,EAAE,MAAM;MACd,KAAK,EAAE,OAAO;MACd,MAAM,EAAE,QAAQ;MAChB,GAAG,EAAE;IACP,CAAC;;IAED;IACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACP,aAAa,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;IAElD;IACA,KAAK,MAAMQ,GAAG,IAAIJ,aAAa,EAAE;MAC/B,IAAIC,QAAQ,IAAII,UAAU,CAACD,GAAG,CAAC,EAAE;QAC/B,OAAOJ,aAAa,CAACI,GAAG,CAAC;MAC3B;IACF;IACA,OAAO,KAAK,CAAC,CAAC;EAChB,CAAC;EAED,oBACEb,OAAA;IACEe,SAAS,EAAG,QAAOb,KAAK,GAAG,OAAO,GAAG,MAAO,EAAE;IAC9CC,OAAO,EAAEI,WAAY;IACrBS,KAAK,EAAE;MAAEC,eAAe,EAAEf,KAAK,GAAI,IAAI,GAAGM,cAAc,CAAC;IAAE;EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEX,CAAC;AAACjB,EAAA,CAvCIH,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}