{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Grid.js\",\n  _s = $RefreshSig$();\n// Grid.js\nimport React from 'react';\nimport { useLifeSimulation } from './LifeSimulationContext';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  rows,\n  cols\n}) => {\n  _s();\n  const {\n    cellStates,\n    // 改动\n    cntCellDeadCum,\n    // 改动\n    setCellStates,\n    // 改动\n    setLivingCells,\n    // 改动\n    setCellDeadCum // 改动\n  } = useLifeSimulation();\n\n  // Update cell state\n  const updateCell = (row, col) => {\n    const newCellStates = [...cellStates];\n    newCellStates[row][col] = !newCellStates[row][col];\n    setCellStates(newCellStates);\n\n    // Update living cells count\n    const count = newCellStates.reduce((acc, row) => acc + row.filter(cell => cell).length, 0);\n    setLivingCells(count);\n\n    // Update cumulative cell dead time\n    const newCumGrid = [...cntCellDeadCum];\n    if (!newCellStates[row][col]) {\n      newCumGrid[row][col]++;\n    } else {\n      newCumGrid[row][col] = 0;\n    }\n    setCellDeadCum(newCumGrid);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: cellStates.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n        alive: cell,\n        cntCellDeadCum: cntCellDeadCum[rowIndex][colIndex],\n        onClick: () => updateCell(rowIndex, colIndex)\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"xx2TOtyCQkwBa0iglfK+pHTvhT8=\", false, function () {\n  return [useLifeSimulation];\n});\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useLifeSimulation","Cell","jsxDEV","_jsxDEV","Grid","rows","cols","_s","cellStates","cntCellDeadCum","setCellStates","setLivingCells","setCellDeadCum","updateCell","row","col","newCellStates","count","reduce","acc","filter","cell","length","newCumGrid","className","children","map","rowIndex","colIndex","alive","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Grid.js"],"sourcesContent":["\n// Grid.js\nimport React from 'react';\nimport { useLifeSimulation } from './LifeSimulationContext';\nimport Cell from './Cell';\n\nconst Grid = ({ rows, cols }) => {\n  const {\n    cellStates, // 改动\n    cntCellDeadCum, // 改动\n    setCellStates, // 改动\n    setLivingCells, // 改动\n    setCellDeadCum // 改动\n  } = useLifeSimulation();\n\n  // Update cell state\n  const updateCell = (row, col) => {\n    const newCellStates = [...cellStates];\n    newCellStates[row][col] = !newCellStates[row][col];\n    setCellStates(newCellStates);\n\n    // Update living cells count\n    const count = newCellStates.reduce((acc, row) => acc + row.filter(cell => cell).length, 0);\n    setLivingCells(count);\n\n    // Update cumulative cell dead time\n    const newCumGrid = [...cntCellDeadCum];\n    if (!newCellStates[row][col]) {\n      newCumGrid[row][col]++;\n    } else {\n      newCumGrid[row][col] = 0;\n    }\n    setCellDeadCum(newCumGrid);\n  };\n\n  return (\n    <div className=\"grid\">\n      {cellStates.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"grid-row\">\n          {row.map((cell, colIndex) => (\n            <Cell\n              key={colIndex}\n              alive={cell}\n              cntCellDeadCum={cntCellDeadCum[rowIndex][colIndex]}\n              onClick={() => updateCell(rowIndex, colIndex)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Grid;"],"mappings":";;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM;IACJC,UAAU;IAAE;IACZC,cAAc;IAAE;IAChBC,aAAa;IAAE;IACfC,cAAc;IAAE;IAChBC,cAAc,CAAC;EACjB,CAAC,GAAGZ,iBAAiB,CAAC,CAAC;;EAEvB;EACA,MAAMa,UAAU,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IAC/B,MAAMC,aAAa,GAAG,CAAC,GAAGR,UAAU,CAAC;IACrCQ,aAAa,CAACF,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,CAACC,aAAa,CAACF,GAAG,CAAC,CAACC,GAAG,CAAC;IAClDL,aAAa,CAACM,aAAa,CAAC;;IAE5B;IACA,MAAMC,KAAK,GAAGD,aAAa,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEL,GAAG,KAAKK,GAAG,GAAGL,GAAG,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAC,CAACC,MAAM,EAAE,CAAC,CAAC;IAC1FX,cAAc,CAACM,KAAK,CAAC;;IAErB;IACA,MAAMM,UAAU,GAAG,CAAC,GAAGd,cAAc,CAAC;IACtC,IAAI,CAACO,aAAa,CAACF,GAAG,CAAC,CAACC,GAAG,CAAC,EAAE;MAC5BQ,UAAU,CAACT,GAAG,CAAC,CAACC,GAAG,CAAC,EAAE;IACxB,CAAC,MAAM;MACLQ,UAAU,CAACT,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,CAAC;IAC1B;IACAH,cAAc,CAACW,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBjB,UAAU,CAACkB,GAAG,CAAC,CAACZ,GAAG,EAAEa,QAAQ,kBAC5BxB,OAAA;MAAoBqB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACrCX,GAAG,CAACY,GAAG,CAAC,CAACL,IAAI,EAAEO,QAAQ,kBACtBzB,OAAA,CAACF,IAAI;QAEH4B,KAAK,EAAER,IAAK;QACZZ,cAAc,EAAEA,cAAc,CAACkB,QAAQ,CAAC,CAACC,QAAQ,CAAE;QACnDE,OAAO,EAAEA,CAAA,KAAMjB,UAAU,CAACc,QAAQ,EAAEC,QAAQ;MAAE,GAHzCA,QAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACF;IAAC,GARMP,QAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA7CIH,IAAI;EAAA,QAOJJ,iBAAiB;AAAA;AAAAmC,EAAA,GAPjB/B,IAAI;AA+CV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}