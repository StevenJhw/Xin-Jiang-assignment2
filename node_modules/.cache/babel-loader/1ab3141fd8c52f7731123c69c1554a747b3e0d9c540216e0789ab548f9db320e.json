{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Cell.js\",\n  _s = $RefreshSig$();\n// Grid.js\nimport React, { useState, useEffect } from 'react';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grid = ({\n  rows,\n  cols,\n  cellStates,\n  handleCellClick\n}) => {\n  _s();\n  const [grid, setGrid] = useState([[]]);\n  useEffect(() => {\n    setGrid(initializeGrid());\n  }, [rows, cols]);\n  const updateCell = (row, col) => {\n    const newGrid = [...grid];\n    newGrid[row][col] = !newGrid[row][col];\n    setGrid(newGrid);\n  };\n  function initializeGrid() {\n    return Array.from({\n      length: rows\n    }, () => Array.from({\n      length: cols\n    }, () => ({\n      alive: Math.random() < 0.05,\n      age: 0\n    })));\n  }\n  const getColor = value => {\n    return interpolateViridis(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(Cell, {\n        alive: cell.alive,\n        onClick: () => {\n          updateCell(rowIndex, colIndex);\n          handleCellClick(rowIndex * cols + colIndex);\n        },\n        style: {\n          backgroundColor: cell.alive ? getColor(cell.age / 10) : '#FFFFFF'\n        }\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Grid, \"5Vi7HY3/aSb0piUODEQBJrixeks=\");\n_c = Grid;\nexport default Grid;\nvar _c;\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["React","useState","useEffect","Cell","jsxDEV","_jsxDEV","Grid","rows","cols","cellStates","handleCellClick","_s","grid","setGrid","initializeGrid","updateCell","row","col","newGrid","Array","from","length","alive","Math","random","age","getColor","value","interpolateViridis","className","children","map","rowIndex","cell","colIndex","onClick","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Cell.js"],"sourcesContent":["\n// Grid.js\nimport React, { useState, useEffect } from 'react';\nimport Cell from './Cell';\n\nconst Grid = ({ rows, cols, cellStates, handleCellClick }) => {\n  const [grid, setGrid] = useState([[]]);\n\n  useEffect(() => {\n    setGrid(initializeGrid());\n  }, [rows, cols]);\n\n  const updateCell = (row, col) => {\n    const newGrid = [...grid];\n    newGrid[row][col] = !newGrid[row][col];\n    setGrid(newGrid);\n  };\n\n  function initializeGrid() {\n    return Array.from({ length: rows }, () =>\n      Array.from({ length: cols }, () => ({ alive: Math.random() < 0.05, age: 0 }))\n    );\n  }\n\n  const getColor = (value) => {\n    return interpolateViridis(value);\n  };\n\n  return (\n    <div className=\"grid\">\n      {grid.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"grid-row\">\n          {row.map((cell, colIndex) => (\n            <Cell\n              key={colIndex}\n              alive={cell.alive}\n              onClick={() => {\n                updateCell(rowIndex, colIndex);\n                handleCellClick(rowIndex * cols + colIndex);\n              }}\n              style={{ backgroundColor: cell.alive ? getColor(cell.age / 10) : '#FFFFFF' }}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Grid;"],"mappings":";;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,cAAc,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACP,IAAI,EAAEC,IAAI,CAAC,CAAC;EAEhB,MAAMO,UAAU,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IAC/B,MAAMC,OAAO,GAAG,CAAC,GAAGN,IAAI,CAAC;IACzBM,OAAO,CAACF,GAAG,CAAC,CAACC,GAAG,CAAC,GAAG,CAACC,OAAO,CAACF,GAAG,CAAC,CAACC,GAAG,CAAC;IACtCJ,OAAO,CAACK,OAAO,CAAC;EAClB,CAAC;EAED,SAASJ,cAAcA,CAAA,EAAG;IACxB,OAAOK,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEd;IAAK,CAAC,EAAE,MAClCY,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAEb;IAAK,CAAC,EAAE,OAAO;MAAEc,KAAK,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI;MAAEC,GAAG,EAAE;IAAE,CAAC,CAAC,CAC9E,CAAC;EACH;EAEA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAC1B,OAAOC,kBAAkB,CAACD,KAAK,CAAC;EAClC,CAAC;EAED,oBACEtB,OAAA;IAAKwB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBlB,IAAI,CAACmB,GAAG,CAAC,CAACf,GAAG,EAAEgB,QAAQ,kBACtB3B,OAAA;MAAoBwB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACrCd,GAAG,CAACe,GAAG,CAAC,CAACE,IAAI,EAAEC,QAAQ,kBACtB7B,OAAA,CAACF,IAAI;QAEHmB,KAAK,EAAEW,IAAI,CAACX,KAAM;QAClBa,OAAO,EAAEA,CAAA,KAAM;UACbpB,UAAU,CAACiB,QAAQ,EAAEE,QAAQ,CAAC;UAC9BxB,eAAe,CAACsB,QAAQ,GAAGxB,IAAI,GAAG0B,QAAQ,CAAC;QAC7C,CAAE;QACFE,KAAK,EAAE;UAAEC,eAAe,EAAEJ,IAAI,CAACX,KAAK,GAAGI,QAAQ,CAACO,IAAI,CAACR,GAAG,GAAG,EAAE,CAAC,GAAG;QAAU;MAAE,GANxES,QAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOd,CACF;IAAC,GAXMT,QAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA1CIL,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}