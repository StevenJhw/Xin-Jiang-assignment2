{"ast":null,"code":"var _jsxFileName = \"/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Cell.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cell = ({\n  alive,\n  cntCellDeadCum,\n  onClick\n}) => {\n  // Function to get the color of the cell\n  function getColor(cntCellDeadCum) {\n    const position = Math.min(cntCellDeadCum / 10, 1);\n    const visibleSpectrum = {\n      '0.00': 'rgb(255,0,255)',\n      '0.25': 'rgb(0,0,255)',\n      '0.50': 'rgb(0,255,0)',\n      '0.75': 'rgb(255,255,0)',\n      '1.00': 'rgb(255,0,0)'\n    };\n    if (!alive && position < 0.25) {\n      return visibleSpectrum['0.25'];\n    }\n    for (let i = 1; i < Object.keys(visibleSpectrum).length; i++) {\n      if (position < parseFloat(Object.keys(visibleSpectrum)[i])) {\n        return visibleSpectrum[Object.keys(visibleSpectrum)[i - 1]];\n      }\n    }\n    return visibleSpectrum[Object.keys(visibleSpectrum)[Object.keys(visibleSpectrum).length - 1]];\n  }\n\n  // Get the color of the cell\n  const cellColor = getColor(cntCellDeadCum);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell\",\n    style: {\n      backgroundColor: cellColor\n    },\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Cell","alive","cntCellDeadCum","onClick","getColor","position","Math","min","visibleSpectrum","i","Object","keys","length","parseFloat","cellColor","className","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Steven/Desktop/NEU/2024 Spring/5610 Web/Project/conways-game-of-life/src/Cell.js"],"sourcesContent":["import React from 'react';\n\nconst Cell = ({ alive, cntCellDeadCum, onClick }) => {\n  // Function to get the color of the cell\n  function getColor(cntCellDeadCum) {\n    const position = Math.min(cntCellDeadCum / 10, 1);\n    const visibleSpectrum = {\n        '0.00': 'rgb(255,0,255)',\n        '0.25': 'rgb(0,0,255)',\n        '0.50': 'rgb(0,255,0)',\n        '0.75': 'rgb(255,255,0)',\n        '1.00': 'rgb(255,0,0)'\n    };\n\n    if (!alive && position < 0.25) {\n        return visibleSpectrum['0.25'];\n    }\n    for (let i = 1; i < Object.keys(visibleSpectrum).length; i++) {\n        if (position < parseFloat(Object.keys(visibleSpectrum)[i])) {\n            return visibleSpectrum[Object.keys(visibleSpectrum)[i - 1]];\n        }\n    }\n    return visibleSpectrum[Object.keys(visibleSpectrum)[Object.keys(visibleSpectrum).length - 1]];\n  }\n\n  // Get the color of the cell\n  const cellColor = getColor(cntCellDeadCum);\n\n  return (\n    <div\n      className=\"cell\"\n      style={{backgroundColor:cellColor}}\n      onClick={onClick}\n    ></div>\n  );\n};\n\nexport default Cell;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC,KAAK;EAAEC,cAAc;EAAEC;AAAQ,CAAC,KAAK;EACnD;EACA,SAASC,QAAQA,CAACF,cAAc,EAAE;IAChC,MAAMG,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACL,cAAc,GAAG,EAAE,EAAE,CAAC,CAAC;IACjD,MAAMM,eAAe,GAAG;MACpB,MAAM,EAAE,gBAAgB;MACxB,MAAM,EAAE,cAAc;MACtB,MAAM,EAAE,cAAc;MACtB,MAAM,EAAE,gBAAgB;MACxB,MAAM,EAAE;IACZ,CAAC;IAED,IAAI,CAACP,KAAK,IAAII,QAAQ,GAAG,IAAI,EAAE;MAC3B,OAAOG,eAAe,CAAC,MAAM,CAAC;IAClC;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACH,eAAe,CAAC,CAACI,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC1D,IAAIJ,QAAQ,GAAGQ,UAAU,CAACH,MAAM,CAACC,IAAI,CAACH,eAAe,CAAC,CAACC,CAAC,CAAC,CAAC,EAAE;QACxD,OAAOD,eAAe,CAACE,MAAM,CAACC,IAAI,CAACH,eAAe,CAAC,CAACC,CAAC,GAAG,CAAC,CAAC,CAAC;MAC/D;IACJ;IACA,OAAOD,eAAe,CAACE,MAAM,CAACC,IAAI,CAACH,eAAe,CAAC,CAACE,MAAM,CAACC,IAAI,CAACH,eAAe,CAAC,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC;EAC/F;;EAEA;EACA,MAAME,SAAS,GAAGV,QAAQ,CAACF,cAAc,CAAC;EAE1C,oBACEH,OAAA;IACEgB,SAAS,EAAC,MAAM;IAChBC,KAAK,EAAE;MAACC,eAAe,EAACH;IAAS,CAAE;IACnCX,OAAO,EAAEA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEX,CAAC;AAACC,EAAA,GAjCItB,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}